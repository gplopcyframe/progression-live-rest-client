<?php
/**
 * TasksApiTest
 * PHP version 5
 *
 * @category Class
 * @package  ProgressionLive
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * ProgressionLIVE API
 *
 * Welcome to the ProgressionLIVE REST API documentation page.    The data exchange format is [JSON](https://en.wikipedia.org/wiki/JavaScript_Object_Notation). This format facilitates the exchange of data with almost all systems while minimizing the amount of data.    All API operations are listed on this page and can be tested directly.    An [OpenAPI](https://github.com/OAI/OpenAPI-Specification) specification file is available at the link above and allows you to generate clients in several languages ​​using [Swagger](https://swagger.io/swagger-codegen/) tools.    The examples on this page use the command-line tool from the well-known Unix family of systems [CURL](https://curl.haxx.se/). This demonstrates the ease of integration. Note that it is possible to install CURL under Microsoft Windows but it's not necessary for the development of an integration. .NET technologies also make it easy to connect to a [REST / JSON API](https://docs.microsoft.com/en-us/aspnet/web-api/overview/advanced/calling-a-web-api-from-a-net-client).    At the authentication level, 3 options are available:    #### HTTP Basic  This mechanism uses standard HTTP authentication supported by the majority of HTTP clients. Just provide your API key as a user without a password. If you have to do it programmatically, you must add an \"Authorization: Basic&lt;base64 encoded apikey:&gt;\" header.    #### HTTP Bearer  This mechanism uses the same header as HTTP Basic authentication but makes adding a header manually easier. Just add an \"Authorization: Bearer&lt;apikey&gt;\" header.    #### Query  In the case where it would be too complex or impossible for you to add authentication headers on the programming platform used, it is possible to add an apiKey = &lt;apikey&gt; parameter to the URL of each request. e.g.: https://macie.progressionlive.com/server/rest/task/1234?apikey=&lt;apikey&gt;
 *
 * OpenAPI spec version: 1.0
 * Contact: support@progressionlive.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.35
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace ProgressionLive;

use ProgressionLive\Configuration;
use ProgressionLive\ApiException;
use ProgressionLive\ObjectSerializer;

/**
 * TasksApiTest Class Doc Comment
 *
 * @category Class
 * @package  ProgressionLive
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class TasksApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test case for taskAssignPost
     *
     * Assign many tasks..
     *
     */
    public function testTaskAssignPost()
    {
    }

    /**
     * Test case for taskAttachmentIdentifierGet
     *
     * .
     *
     */
    public function testTaskAttachmentIdentifierGet()
    {
    }

    /**
     * Test case for taskAttachmentIdentifierPost
     *
     * .
     *
     */
    public function testTaskAttachmentIdentifierPost()
    {
    }

    /**
     * Test case for taskCreatePost
     *
     * Create a task..
     *
     */
    public function testTaskCreatePost()
    {
    }

    /**
     * Test case for taskDispatchPost
     *
     * Dispatch many tasks. Sends the task to the mobile device of the resource. If no resource is specified, the currently assigned resource will be used..
     *
     */
    public function testTaskDispatchPost()
    {
    }

    /**
     * Test case for taskIdentifierAssignPost
     *
     * Assign a task..
     *
     */
    public function testTaskIdentifierAssignPost()
    {
    }

    /**
     * Test case for taskIdentifierAttachmentPost
     *
     * .
     *
     */
    public function testTaskIdentifierAttachmentPost()
    {
    }

    /**
     * Test case for taskIdentifierAttachmentsGet
     *
     * .
     *
     */
    public function testTaskIdentifierAttachmentsGet()
    {
    }

    /**
     * Test case for taskIdentifierDispatchPost
     *
     * Dispatch a task. Sends the task to the mobile device of the resource.  If no resource is specified, the currently assigned resource will be used..
     *
     */
    public function testTaskIdentifierDispatchPost()
    {
    }

    /**
     * Test case for taskIdentifierEventPost
     *
     * .
     *
     */
    public function testTaskIdentifierEventPost()
    {
    }

    /**
     * Test case for taskIdentifierGet
     *
     * Get a task..
     *
     */
    public function testTaskIdentifierGet()
    {
    }

    /**
     * Test case for taskIdentifierLinkPost
     *
     * Link a task to a parent task. If no parent task found, an error is returned..
     *
     */
    public function testTaskIdentifierLinkPost()
    {
    }

    /**
     * Test case for taskIdentifierLinksGet
     *
     * Get a task's subtasks..
     *
     */
    public function testTaskIdentifierLinksGet()
    {
    }

    /**
     * Test case for taskIdentifierSignatureGet
     *
     * .
     *
     */
    public function testTaskIdentifierSignatureGet()
    {
    }

    /**
     * Test case for taskIdentifierSignatureHrGet
     *
     * .
     *
     */
    public function testTaskIdentifierSignatureHrGet()
    {
    }

    /**
     * Test case for taskIdentifierSignatureOtherGet
     *
     * .
     *
     */
    public function testTaskIdentifierSignatureOtherGet()
    {
    }

    /**
     * Test case for taskIdentifierStateGet
     *
     * Get a task's state history..
     *
     */
    public function testTaskIdentifierStateGet()
    {
    }

    /**
     * Test case for taskIdentifierStatePost
     *
     * Change task's state..
     *
     */
    public function testTaskIdentifierStatePost()
    {
    }

    /**
     * Test case for taskIdentifierTimeEntriesGet
     *
     * Get a task's time entries..
     *
     */
    public function testTaskIdentifierTimeEntriesGet()
    {
    }

    /**
     * Test case for taskIdentifierUnlinkPost
     *
     * Unlink a task from its parent task, if a parent task is linked to it..
     *
     */
    public function testTaskIdentifierUnlinkPost()
    {
    }

    /**
     * Test case for taskIdentifierUpdatePost
     *
     * Update a task. Only provided fields will be updated..
     *
     */
    public function testTaskIdentifierUpdatePost()
    {
    }

    /**
     * Test case for taskListGet
     *
     * Search for tasks..
     *
     */
    public function testTaskListGet()
    {
    }

    /**
     * Test case for taskStateListGet
     *
     * Get multiple tasks state history..
     *
     */
    public function testTaskStateListGet()
    {
    }

    /**
     * Test case for taskStatePost
     *
     * Change multiple tasks state..
     *
     */
    public function testTaskStatePost()
    {
    }
}
